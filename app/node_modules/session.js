// Bring in redis client for persistent session store
const redisClient = require('redisClient.js');
const session = require('express-session');
// Create a redis store constructor
const RedisSessionStore = require('connect-redis')(session);
// Retrieve configs based on current environment type ie. production or development
const configs = require('configs.js');

const development = process.env.NODE_ENV !== 'production';

const sessionOptions = { resave: false, // don't force save session to session store
                         saveUninitialized: false, // don't force store uninitialized session
                         cookie: { maxAge: 30 * 60 * 1000 }, // Setting the Expires Set-Cookie attr in milliseconds
                         secret: configs.cookieSecret, // Secret used to sign the session ID cookie
                         store: new RedisSessionStore({ // Session store instance instead of default MemoryStore instance
                             client: redisClient,
                         }),
};

if (!development) {
    sessionOptions.cookie.secure = true; // serve secure cookies
}

module.exports = session(sessionOptions);
